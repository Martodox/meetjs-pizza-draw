version: 2
jobs:
  test-interface:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Instal dependencies
          command: npm ci
      - run:
          name: Run tests
          command: npm test
  lint-interface:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Instal dependencies
          command: npm ci
      - run:
          name: Run lint
          command: npm run lint          
  bump-version:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Set git config
          command: | 
            git config user.email "test@test.com"
            git config user.name "CircleCI"
      - run:
          name: Bump version
          command: npm version patch -m "[skip ci] Upgrade to %s"
      - run:
          name: Commit changes
          command: git push origin master
  build-docker:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Pull changed version
          command: git pull origin $CIRCLE_BRANCH
      - run:
          name: Build docker image
          command: | 
            VERSION=$(grep '"version":' package.json | cut -d\" -f4)
            docker build -t $GITHUB_IMAGE_TAG:$VERSION .
      - run:
          name: Push docker image
          command: |
            VERSION=$(grep '"version":' package.json | cut -d\" -f4)
            echo "$GITHUB_PAT" | docker login -u $GITHUB_CONTAINER_LOGIN --password-stdin docker.pkg.github.com
            docker push $GITHUB_IMAGE_TAG:$VERSION
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "78:b4:0f:da:25:00:3f:be:a4:f9:b8:63:5e:c7:73:33"
      - run:
          name: Pull changed version
          command: git pull origin $CIRCLE_BRANCH
      - run:
          name: Deploy Over SSH
          command: |
            VERSION=$(grep '"version":' package.json | cut -d\" -f4)
            ssh $SSH_USER@$SSH_HOST  "./deploy-pizza.sh $GITHUB_IMAGE_TAG $VERSION pizzadraw"            
            
workflows:
  version: 2
  test-build-deploy:
    triggers:

    jobs:
      - test-interface
      - lint-interface
      - bump-version:
          filters:
            branches:
              only: master
          requires:
            - test-interface
            - lint-interface
      - build-docker:
          filters:
            branches:
              only: master
          requires:
            - bump-version
      - deploy:
          requires:
            - build-docker
